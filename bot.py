import telebot
import random
import datetime
import time 
from telebot import types
# --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨ (v20) ---
from telebot.types import InlineQueryResultArticle, InputTextMessageContent
# --- –ö–æ–Ω–µ—Ü v20 ---

# --- –ù–û–í–û–ï –î–õ–Ø RENDER (v17) ---
import os
from flask import Flask
from threading import Thread
# --- –ö–æ–Ω–µ—Ü v17 ---

# --- –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à —Ç–æ–∫–µ–Ω –æ—Ç @BotFather ---
# !!! –í–ê–ñ–ù–û: –ú—ã –æ—Å—Ç–∞–≤–∏–º —ç—Ç–æ –ø—É—Å—Ç—ã–º, —Ç–∞–∫ –∫–∞–∫ Render –¥–æ–±–∞–≤–∏—Ç —Ç–æ–∫–µ–Ω —Å–∞–º
BOT_TOKEN = os.environ.get('BOT_TOKEN') 
# ----------------------------------------------

# --- –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞ ---
bot = telebot.TeleBot(BOT_TOKEN)

# --- –ò–î–ï–Ø ‚Ññ5: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ú–ï–ù–Æ –ö–û–ú–ê–ù–î (–∫–Ω–æ–ø–∫–∞ "–ú–µ–Ω—é") ---
try:
    bot_commands = [
        types.BotCommand("start", "‚ñ∂Ô∏è –°—Ç–∞—Ä—Ç / –ò–≥—Ä—ã (–õ–∏—á–Ω–æ–µ –º–µ–Ω—é)"),
        types.BotCommand("groupstats", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä"),
        types.BotCommand("go", "üì£ –°–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å (–ö—Ç–æ –∏–¥–µ—Ç?)") 
    ]
    
    # –ú–µ–Ω—é –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è Render
    bot.set_my_commands(bot_commands) 
    
    print("–ú–µ–Ω—é –∫–æ–º–∞–Ω–¥ (–≤–æ–∑–º–æ–∂–Ω–æ) –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
    
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥: {e}")
# -----------------------------------------------------------


# --- –ù–∞—à–∏ "—Ö—Ä–∞–Ω–∏–ª–∏—â–∞" –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–º—è—Ç–∏ ---
user_daily_stats = {} # –î–ª—è "–ì—Ä–∞–¥—É—Å–Ω–∏–∫–∞" –∏ "–†—É–ª–µ—Ç–∫–∏"
polls_data = {}       # –î–ª—è –û–ü–†–û–°–û–í

# (v18) "–õ–∏—á–Ω—ã–µ" –º–µ–Ω—é
menu_owners = {}
user_menus = {}

# (v19) –ê–Ω—Ç–∏—Ñ–ª—É–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
last_stats_message = {}

# --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨ (v20) ---
# { user_id: chat_id }
# –•—Ä–∞–Ω–∏—Ç, –≤ –∫–∞–∫–æ–º —á–∞—Ç–µ —é–∑–µ—Ä –∏–≥—Ä–∞–ª –≤ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–∞–∑
user_last_active_chat = {}
# --- –ö–æ–Ω–µ—Ü v20 ---


# --- –¢–µ–∫—Å—Ç—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ ---
MAIN_MENU_TEXT = "–î–æ–∫–∞–∂–∏, —á—Ç–æ –Ω–µ —Ç–µ—Ä–ø–∏–ª–∞!:"

# --- –ò–î–ï–Ø ‚Ññ2: –§—É–Ω–∫—Ü–∏–∏ "–ì—Ä–∞–¥—É—Å–Ω–∏–∫–∞" ---

def get_krasavchik_comment(percent):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–º–µ—à–Ω–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∫—Ä–∞—Å–æ—Ç—ã."""
    if percent <= 20:
        return f"–°–µ–≥–æ–¥–Ω—è —è –∫—Ä–∞—Å–∞–≤—á–∏–∫ –Ω–∞ {percent}%... üòÖ (–õ—É—á—à–µ –±–µ–∑ –∑–µ—Ä–∫–∞–ª–∞)"
    elif percent <= 50:
        return f"–°–µ–≥–æ–¥–Ω—è —è –∫—Ä–∞—Å–∞–≤—á–∏–∫ –Ω–∞ {percent}%! üòé (–í–ø–æ–ª–Ω–µ —Å–µ–±–µ, —Å–æ–π–¥–µ—Ç)"
    elif percent <= 80:
        return f"–°–µ–≥–æ–¥–Ω—è —è –∫—Ä–∞—Å–∞–≤—á–∏–∫ –Ω–∞ {percent}%! üî• (–ó–∞—è–≤–∫–∞ –Ω–∞ —É—Å–ø–µ—Ö!)"
    else: # 81-100
        return f"–°–µ–≥–æ–¥–Ω—è —è –∫—Ä–∞—Å–∞–≤—á–∏–∫ –Ω–∞ {percent}%! üëë (–î–ê –¢–´ –ö–û–†–û–õ–¨!)"

def get_loh_comment(percent):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–º–µ—à–Ω–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ "–ª–æ—Ö–∞"."""
    if percent <= 20:
        return f"–°–µ–≥–æ–¥–Ω—è —è –ª–æ—Ö –≤—Å–µ–≥–æ –Ω–∞ {percent}%! üéâ (–¢—ã –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!)"
    elif percent <= 50:
        return f"–°–µ–≥–æ–¥–Ω—è —è –ª–æ—Ö –Ω–∞ {percent}%. (–ù—É, –±—ã–≤–∞–µ—Ç –∏ —Ö—É–∂–µ...)"
    elif percent <= 80:
        return f"–°–µ–≥–æ–¥–Ω—è —è –ª–æ—Ö –Ω–∞ {percent}%... üò¨ (–û—Å—Ç–æ—Ä–æ–∂–Ω–µ–µ, –µ—Å—Ç—å —Ä–∏—Å–∫–∏)"
    else: # 81-100
        return f"–°–µ–≥–æ–¥–Ω—è —è –ª–æ—Ö –Ω–∞ {percent}%! ü§¶‚Äç‚ôÇÔ∏è (–ö–û–ú–ë–û! –õ—É—á—à–µ –Ω–µ —Ä–∏—Å–∫–æ–≤–∞—Ç—å)"

# --- –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è "–ò–∑–º–µ—Ä–∏—Ç–µ–ª—è" (v16) ---
def get_size_comment(cm):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–º–µ—à–Ω–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞."""
    if cm <= 5:
        return f"–°–µ–≥–æ–¥–Ω—è —É –º–µ–Ω—è {cm} —Å–º... üî¨ (–ú–∏–∫—Ä–æ—Å–∫–æ–ø –≤ —Å—Ç—É–¥–∏—é!)"
    elif cm <= 10:
        return f"–°–µ–≥–æ–¥–Ω—è —É –º–µ–Ω—è {cm} —Å–º. (–°–∫—Ä–æ–º–Ω–µ–Ω—å–∫–æ, –Ω–æ —Å–æ –≤–∫—É—Å–æ–º)"
    elif cm <= 18:
        return f"–°–µ–≥–æ–¥–Ω—è —É –º–µ–Ω—è {cm} —Å–º! üìè (–ó–æ–ª–æ—Ç–∞—è —Å–µ—Ä–µ–¥–∏–Ω–∞!)"
    elif cm <= 25:
        return f"–°–µ–≥–æ–¥–Ω—è —É –º–µ–Ω—è {cm} —Å–º! üî• (–û–≥–æ! –í–ø–µ—á–∞—Ç–ª—è–µ—Ç!)"
    else: # 26-30
        return f"–°–µ–≥–æ–¥–Ω—è —É –º–µ–Ω—è {cm} —Å–º! ü¶Ñ (–ì–ò–ì–ê–ù–¢! –¢—ã —Å—É—â–µ—Å—Ç–≤—É–µ—à—å?!)"


# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–µ–Ω—é (v16) ---
def create_main_menu_markup():
    markup = types.InlineKeyboardMarkup(row_width=2) 
    btn1 = types.InlineKeyboardButton(
        "–ö—Ä–∞—Å–∞–≤—á–∏–∫ üòé", 
        callback_data="ask_krasavchik"
    )
    btn2 = types.InlineKeyboardButton(
        "–õ–æ—Ö üòÖ", 
        callback_data="ask_loh"
    )
    # –ù–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞ "–ò–∑–º–µ—Ä–∏—Ç–µ–ª—è"
    btn5 = types.InlineKeyboardButton(
        "–ú–æ–π —Ä–∞–∑–º–µ—Ä üçÜ", 
        callback_data="ask_size"
    )
    btn3 = types.InlineKeyboardButton(
        "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", 
        callback_data="show_group_stats"
    )
    btn4 = types.InlineKeyboardButton(
        "üá∫üá¶ –†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞", 
        callback_data="roulette_play_next" 
    )
    
    markup.add(btn1, btn2, btn5, btn3, btn4)
    return markup

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start (v19) ---
@bot.message_handler(commands=['start', 'play'])
def send_choice_menu(message):
    
    chat_id = message.chat.id
    user_id = message.from_user.id
    
    # 1. –ê–Ω—Ç–∏—Ñ–ª—É–¥: –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /start
    try:
        bot.delete_message(chat_id, message.message_id)
        print(f"–£–¥–∞–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ {message.message_id} –æ—Ç {user_id}")
    except telebot.apihelper.ApiTelegramException as e:
        print(f"–ù–µ —Å–º–æ–≥ —É–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /start (–Ω–µ—Ç –ø—Ä–∞–≤?): {e}")

    # 2. –ê–Ω—Ç–∏—Ñ–ª—É–¥: –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É —é–∑–µ—Ä–∞ —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é
    if user_id in user_menus:
        old_menu_id = user_menus[user_id]
        # –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é
        try:
            bot.delete_message(chat_id, old_menu_id)
            print(f"–£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é {old_menu_id} –¥–ª—è {user_id}")
        except telebot.apihelper.ApiTelegramException as e:
            print(f"–ù–µ —Å–º–æ–≥ —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä–æ–µ –º–µ–Ω—é (—É–∂–µ —É–¥–∞–ª–µ–Ω–æ?): {e}")
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏
        if old_menu_id in menu_owners:
            del menu_owners[old_menu_id]
        del user_menus[user_id]

    # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é
    new_menu_msg = bot.send_message(
        chat_id, 
        MAIN_MENU_TEXT, 
        reply_markup=create_main_menu_markup()
    )
    
    # 4. –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –º–µ–Ω—é –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    new_menu_id = new_menu_msg.message_id
    menu_owners[new_menu_id] = user_id
    user_menus[user_id] = new_menu_id
    
    print(f"–°–æ–∑–¥–∞–Ω–æ –Ω–æ–≤–æ–µ –º–µ–Ω—é {new_menu_id} –¥–ª—è {user_id}")


# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /groupstats (v19) ---
@bot.message_handler(commands=['groupstats'])
def send_group_stats(message):
    chat_id = message.chat.id
    today_str = str(datetime.date.today())

    try:
        # 1. –ê–Ω—Ç–∏—Ñ–ª—É–¥: –£–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /groupstats
        try:
            bot.delete_message(chat_id, message.message_id)
            print(f"–£–¥–∞–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /groupstats {message.message_id}")
        except telebot.apihelper.ApiTelegramException as e:
            print(f"–ù–µ —Å–º–æ–≥ —É–¥–∞–ª–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /groupstats (–Ω–µ—Ç –ø—Ä–∞–≤?): {e}")
        
        # 2. –ê–Ω—Ç–∏—Ñ–ª—É–¥: –£–¥–∞–ª—è–µ–º –°–¢–ê–†–´–ô –æ—Ç—á–µ—Ç –±–æ—Ç–∞
        if chat_id in last_stats_message:
            try:
                bot.delete_message(chat_id, last_stats_message[chat_id])
                print(f"–£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π –æ—Ç—á–µ—Ç {last_stats_message[chat_id]}")
            except telebot.apihelper.ApiTelegramException as e:
                print(f"–ù–µ —Å–º–æ–≥ —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–π –æ—Ç—á–µ—Ç (—É–∂–µ —É–¥–∞–ª–µ–Ω?): {e}")

        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –ª–∏—á–Ω–∞—è –ø–µ—Ä–µ–ø–∏—Å–∫–∞ –∏–ª–∏ –≥—Ä—É–ø–ø–∞
        if message.chat.type == "private":
            bot.send_message(chat_id, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤. –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ /start, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å *—Å–≤–æ–∏* –ø—Ä–æ—Ü–µ–Ω—Ç—ã.")
            return
            
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ —ç—Ç–æ–º—É —á–∞—Ç—É
        if chat_id not in user_daily_stats or user_daily_stats[chat_id]['date'] != today_str:
            bot.send_message(chat_id, f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ {today_str} –≤ —ç—Ç–æ–º —á–∞—Ç–µ –µ—â–µ –Ω–µ —Å–æ–±—Ä–∞–Ω–∞. \n–ù–∞–∂–º–∏—Ç–µ /start –∏ —Å—ã–≥—Ä–∞–π—Ç–µ!")
            return
            
        # 5. –°–ª–æ–≤–∞—Ä—å —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π —ç—Ç–æ–≥–æ —á–∞—Ç–∞
        stats_for_this_chat_dict = user_daily_stats[chat_id]['users']
        
        if not stats_for_this_chat_dict:
            bot.send_message(chat_id, "–ü–æ–∫–∞ –Ω–∏–∫—Ç–æ –Ω–µ –∏–≥—Ä–∞–ª —Å–µ–≥–æ–¥–Ω—è –≤ —ç—Ç–æ–º —á–∞—Ç–µ. \n–ù–∞–∂–º–∏—Ç–µ /start, —á—Ç–æ–±—ã –±—ã—Ç—å –ø–µ—Ä–≤—ã–º!")
            return
            
        # 6. –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫
        report_lines = [f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ò–ì–† –≤ —ç—Ç–æ–º —á–∞—Ç–µ –∑–∞ {today_str}:\n"]
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ "–∫—Ä–∞—Å–∞–≤—á–∏–∫—É"
        sorted_users_list = sorted(stats_for_this_chat_dict.items(), key=lambda item: item[1]['krasavchik'], reverse=True)
        
        for user_id, data in sorted_users_list:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º .replace() –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ HTML
            user_name_safe = data['name'].replace('<', '&lt;').replace('>', '&gt;')
            
            # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ä—É–ª–µ—Ç–∫–µ
            best_streak = data.get('roulette_best_streak', 0)
            roulette_stat_str = ""
            if best_streak > 0:
                roulette_stat_str = f" | –†—É–ª–µ—Ç–∫–∞: üèÜ {best_streak} –ø–æ–¥—Ä—è–¥"
            
            # –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ "–†–∞–∑–º–µ—Ä—É"
            size = data.get('size', 0)
            size_stat_str = ""
            if size > 0:
                size_stat_str = f" | –†–∞–∑–º–µ—Ä: üçÜ {size} —Å–º"

            report_lines.append(f" - <b>{user_name_safe}</b>: –ö—Ä–∞—Å–∞–≤—á–∏–∫ {data['krasavchik']}%, –õ–æ—Ö {data['loh']}%{size_stat_str}{roulette_stat_str}")
            
        # 7. –ù–∞—Ö–æ–¥–∏–º "–ö–æ—Ä–æ–ª–µ–π"
        king_data = max(stats_for_this_chat_dict.values(), key=lambda user_data: user_data['krasavchik'])
        loser_data = max(stats_for_this_chat_dict.values(), key=lambda user_data: user_data['loh'])
        
        # 8. –ì–æ—Ç–æ–≤–∏–º –∏–º–µ–Ω–∞ –¥–ª—è HTML
        king_name_safe = king_data['name'].replace('<', '&lt;').replace('>', '&gt;')
        loser_name_safe = loser_data['name'].replace('<', '&lt;').replace('>', '&gt;')
        
        # 9. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–∏–Ω–∞—Ü–∏–∏ –≤ –æ—Ç—á–µ—Ç
        report_lines.append(f"\nüëë <b>–¶–∞—Ä—å –ö—Ä–∞—Å–∞–≤—á–∏–∫–æ–≤ —Å–µ–≥–æ–¥–Ω—è:</b> {king_name_safe} ({king_data['krasavchik']}%)")
        report_lines.append(f"ü§¶‚Äç‚ôÇÔ∏è <b>–ì–ª–∞–≤–Ω—ã–π –õ–æ—Ö –¥–Ω—è:</b> {loser_name_safe} ({loser_data['loh']}%)")

        # –ù–∞—Ö–æ–¥–∏–º "–ö–æ—Ä–æ–ª—è –£–¥–∞—á–∏"
        luckiest_data = max(stats_for_this_chat_dict.values(), key=lambda user_data: user_data.get('roulette_best_streak', 0))
        if luckiest_data.get('roulette_best_streak', 0) > 0:
            luckiest_name_safe = luckiest_data['name'].replace('<', '&lt;').replace('>', '&gt;')
            report_lines.append(f"üèÜ <b>–ö–æ—Ä–æ–ª—å –£–¥–∞—á–∏:</b> {luckiest_name_safe} (–≤—ã–∂–∏–ª {luckiest_data['roulette_best_streak']} —Ä–∞–∑ –ø–æ–¥—Ä—è–¥!)")

        # –ù–∞—Ö–æ–¥–∏–º "–ì–ª–∞–≤–Ω–æ–≥–æ –ì–∏–≥–∞–Ω—Ç–∞"
        biggest_data = max(stats_for_this_chat_dict.values(), key=lambda user_data: user_data.get('size', 0))
        if biggest_data.get('size', 0) > 0:
            biggest_name_safe = biggest_data['name'].replace('<', '&lt;').replace('>', '&gt;')
            report_lines.append(f"üçÜ <b>–ì–ª–∞–≤–Ω—ã–π –ì–∏–≥–∞–Ω—Ç:</b> {biggest_name_safe} ({biggest_data['size']} —Å–º)")
            
        # 10. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ù–û–í–´–ô –æ—Ç—á–µ—Ç –∏ –°–û–•–†–ê–ù–Ø–ï–ú –µ–≥–æ ID
        stats_msg = bot.send_message(chat_id, "\n".join(report_lines), parse_mode="HTML")
        last_stats_message[chat_id] = stats_msg.message_id

    except Exception as e:
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–æ–≤ –æ—à–∏–±–æ–∫, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –ø–∞–¥–∞–ª
        print(f"!!! –û–®–ò–ë–ö–ê –≤ send_group_stats: {e}")
        bot.send_message(message.chat.id, "–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –ø–æ–¥—Å—á–µ—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")


# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö –û–ü–†–û–°–û–í /go (v17) ---

def format_poll_text(poll_data):
    """
    –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¢–ï–ö–°–¢–ê –æ–ø—Ä–æ—Å–∞
    —Å–æ —Å–ø–∏—Å–∫–∞–º–∏ –∏–º–µ–Ω.
    """
    question = poll_data['question']
    
    # –°–æ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–∫–∏ –∏–º–µ–Ω
    names_going = [name.replace('<', '&lt;').replace('>', '&gt;') for name in poll_data['going'].values()]
    names_not_going = [name.replace('<', '&lt;').replace('>', '&gt;') for name in poll_data['not_going'].values()]
    
    text_going = " - (–ø–æ–∫–∞ –Ω–µ—Ç)"
    if names_going:
        text_going = "\n".join([f" - <b>{name}</b>" for name in names_going])
        
    text_not_going = " - (–ø–æ–∫–∞ –Ω–µ—Ç)"
    if names_not_going:
        text_not_going = "\n".join([f" - {name}" for name in names_not_going]) # –ú–µ–Ω–µ–µ –≤–∞–∂–Ω–æ, –Ω–µ –≤—ã–¥–µ–ª—è–µ–º
        
    final_text = f"üì£ <b>–û–ü–†–û–°:</b> {question.replace('<', '&lt;').replace('>', '&gt;')}\n" \
                 f"--------------------\n" \
                 f"üëç <b>–ò–¥—É—Ç ({len(names_going)}):</b>\n{text_going}\n\n" \
                 f"üëé <b>–ü–∞—Å ({len(names_not_going)}):</b>\n{text_not_going}"
                 
    return final_text

def create_poll_markup(poll_data):
    """
    –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ö–ù–û–ü–û–ö –æ–ø—Ä–æ—Å–∞
    (—Ç–µ–ø–µ—Ä—å –æ–Ω–∞ –Ω–µ –º–µ–Ω—è–µ—Ç —Å—á–µ—Ç—á–∏–∫–∏, –æ–Ω–∏ –≤ —Ç–µ–∫—Å—Ç–µ)
    """
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn_go = types.InlineKeyboardButton(f"–Ø –∏–¥—É! üëç", callback_data="poll_go")
    btn_pass = types.InlineKeyboardButton(f"–Ø –ø–∞—Å üëé", callback_data="poll_pass")
    btn_close = types.InlineKeyboardButton("üîí –ó–∞–∫—Ä—ã—Ç—å –æ–ø—Ä–æ—Å", callback_data="poll_close")
    markup.add(btn_go, btn_pass, btn_close)
    return markup

@bot.message_handler(commands=['go'])
def create_poll_handler(message):
    chat_id = message.chat.id
    creator_id = message.from_user.id
    
    # –ú—ã –ù–ï —É–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É /go, —Ç–∞–∫ –∫–∞–∫ –≤ –Ω–µ–π —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –≤–æ–ø—Ä–æ—Å!
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞ (–≤—Å—ë, —á—Ç–æ –ø–æ—Å–ª–µ /go )
    question = message.text[len('/go '):].strip()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤–æ–ø—Ä–æ—Å –Ω–µ –ø—É—Å—Ç–æ–π
    if not question:
        bot.send_message(chat_id, "–í—ã –Ω–µ –∑–∞–¥–∞–ª–∏ –≤–æ–ø—Ä–æ—Å! \n–ü—Ä–∏–º–µ—Ä: `/go –ö—Ç–æ –∏–¥–µ—Ç –≤ –∫–∏–Ω–æ?`", parse_mode="Markdown")
        return
        
    try:
        # 1. –°–æ–∑–¥–∞–µ–º "–ø—É—Å—Ç—ã–µ" –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–ø—Ä–æ—Å–∞
        poll_data = {
            'question': question,
            'creator_id': creator_id,
            'going': {}, # –¢–µ–ø–µ—Ä—å —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å {user_id: 'name'}
            'not_going': {} # –¢–µ–ø–µ—Ä—å —ç—Ç–æ —Å–ª–æ–≤–∞—Ä—å {user_id: 'name'}
        }
        
        # 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫–∏
        poll_text = format_poll_text(poll_data)
        markup = create_poll_markup(poll_data)
        
        # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–ø—Ä–æ—Å–æ–º
        poll_message = bot.send_message(chat_id, poll_text, parse_mode="HTML", reply_markup=markup)
        
        # 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø—Ä–æ—Å –≤ –Ω–∞—à–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ, –∏—Å–ø–æ–ª—å–∑—É—è ID —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –∫–ª—é—á
        polls_data[poll_message.message_id] = poll_data
        
    except Exception as e:
        print(f"!!! –û–®–ò–ë–ö–ê –≤ create_poll_handler: {e}")
        bot.send_message(chat_id, "–û–π, –Ω–µ —Å–º–æ–≥ —Å–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å...")

# --- –ö–æ–Ω–µ—Ü v17 ---


# --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨ (v20) ---
# --- –ù–û–í–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö INLINE –†–ï–ñ–ò–ú–ê ---
@bot.inline_query_handler(func=lambda query: True)
def handle_inline_query(query):
    user_id = query.from_user.id
    user_name = query.from_user.first_name.replace('<', '&lt;').replace('>', '&gt;')
    today_str = str(datetime.date.today())
    results = []

    try:
        # 1. –ù–∞–π—Ç–∏ –ø–æ—Å–ª–µ–¥–Ω—é—é –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        chat_id = user_last_active_chat.get(user_id)
        
        # 2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —É –Ω–µ–≥–æ —Å–µ–≥–æ–¥–Ω—è—à–Ω—è—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ —ç—Ç–æ–º —á–∞—Ç–µ
        stats = None
        if chat_id:
            if (chat_id in user_daily_stats and 
                user_daily_stats[chat_id]['date'] == today_str and
                user_id in user_daily_stats[chat_id]['users']):
                stats = user_daily_stats[chat_id]['users'][user_id]
        
        # 3. –ï—Å–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ù–ê–ô–î–ï–ù–ê, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º 4 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        if stats:
            # A. –ö—Ä–∞—Å–∞–≤—á–∏–∫
            kras_percent = stats.get('krasavchik', 0)
            kras_title = f"–ü–æ–¥–µ–ª–∏—Ç—å—Å—è % –ö—Ä–∞—Å–∞–≤—á–∏–∫–∞ ({kras_percent}%)"
            kras_msg = f"‚ö° {user_name} —Å–µ–≥–æ–¥–Ω—è –∫—Ä–∞—Å–∞–≤—á–∏–∫ –Ω–∞ {kras_percent}%!"
            results.append(
                InlineQueryResultArticle(
                    id='1', 
                    title=kras_title, 
                    description=get_krasavchik_comment(kras_percent),
                    input_message_content=InputTextMessageContent(kras_msg)
                )
            )
            
            # B. –õ–æ—Ö
            loh_percent = stats.get('loh', 0)
            loh_title = f"–ü–æ–¥–µ–ª–∏—Ç—å—Å—è % –õ–æ—Ö–∞ ({loh_percent}%)"
            loh_msg = f"‚ö° {user_name} —Å–µ–≥–æ–¥–Ω—è –ª–æ—Ö –Ω–∞ {loh_percent}%."
            results.append(
                InlineQueryResultArticle(
                    id='2', 
                    title=loh_title, 
                    description=get_loh_comment(loh_percent),
                    input_message_content=InputTextMessageContent(loh_msg)
                )
            )
            
            # C. –†–∞–∑–º–µ—Ä
            size = stats.get('size', 0)
            size_title = f"–ü–æ–¥–µ–ª–∏—Ç—å—Å—è –†–∞–∑–º–µ—Ä–æ–º (üçÜ {size} —Å–º)"
            size_msg = f"‚ö° {user_name} –∏–∑–º–µ—Ä–∏–ª —Å–≤–æ–π —Ä–∞–∑–º–µ—Ä: üçÜ {size} —Å–º!"
            results.append(
                InlineQueryResultArticle(
                    id='3', 
                    title=size_title, 
                    description=get_size_comment(size),
                    input_message_content=InputTextMessageContent(size_msg)
                )
            )
            
            # D. –†—É–ª–µ—Ç–∫–∞
            streak = stats.get('roulette_best_streak', 0)
            roulette_title = f"–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∫–æ—Ä–¥–æ–º –≤ –†—É–ª–µ—Ç–∫–µ (üèÜ {streak})"
            roulette_msg = f"‚ö° {user_name} –ø–æ—Å—Ç–∞–≤–∏–ª(–∞) —Ä–µ–∫–æ—Ä–¥ –≤ —Ä—É–ª–µ—Ç–∫–µ: üèÜ {streak} –≤—ã—Å—Ç—Ä–µ–ª–æ–≤ –ø–æ–¥—Ä—è–¥!"
            results.append(
                InlineQueryResultArticle(
                    id='4', 
                    title=roulette_title, 
                    description=f"–õ—É—á—à–∞—è —Å–µ—Ä–∏—è –≤—ã–∂–∏–≤–∞–Ω–∏—è: {streak}",
                    input_message_content=InputTextMessageContent(roulette_msg)
                )
            )
            
        # 4. –ï—Å–ª–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ù–ï –ù–ê–ô–î–ï–ù–ê (–Ω–µ –∏–≥—Ä–∞–ª, –∏–ª–∏ –±–æ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–ª—Å—è)
        else:
            results.append(
                InlineQueryResultArticle(
                    id='1', 
                    title="–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —à–µ—Ä–∏–Ω–≥–∞", 
                    description="–ù–∞–ø–∏—à–∏—Ç–µ /start –≤ –≥—Ä—É–ø–ø–µ, —á—Ç–æ–±—ã —Å–Ω–∞—á–∞–ª–∞ —Å—ã–≥—Ä–∞—Ç—å!",
                    input_message_content=InputTextMessageContent(f"{user_name}, —è –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É. –°—ã–≥—Ä–∞–π –≤ –≥—Ä—É–ø–ø–µ!")
                )
            )
            
        # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ –∑–∞–ø—Ä–æ—Å
        # cache_time=10 - –∫—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—Å–µ–≥–æ –Ω–∞ 10 —Å–µ–∫—É–Ω–¥
        bot.answer_inline_query(query.id, results, cache_time=10)

    except Exception as e:
        print(f"!!! –û–®–ò–ë–ö–ê –≤ handle_inline_query: {e}")
# --- –ö–æ–Ω–µ—Ü v20 ---


# --- –û–°–ù–û–í–ù–û–ô –û–ë–†–ê–ë–û–¢—á–∏–∫ –ö–ù–û–ü–û–ö (–ò–ó–ú–ï–ù–ï–ù v20) ---
@bot.callback_query_handler(func=lambda call: True)
def handle_callback_query(call):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –í–°–ï –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏.
    """
    
    today_str = str(datetime.date.today())
    user_id = call.from_user.id
    chat_id = call.message.chat.id
    message_id = call.message.message_id
    user_name = call.from_user.first_name 

    try:
        # --- –û–ë–†–ê–ë–û–¢–ö–ê –û–ü–†–û–°–ê (v17) ---
        # –û–ø—Ä–æ—Å—ã - –ü–£–ë–õ–ò–ß–ù–´–ï, –∏—Ö –º–æ–∂–µ—Ç –Ω–∞–∂–∏–º–∞—Ç—å –ª—é–±–æ–π.
        if call.data.startswith('poll_'):
            
            # 1. –ù–∞—Ö–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –æ–ø—Ä–æ—Å–∞ (–ø–æ ID —Å–æ–æ–±—â–µ–Ω–∏—è)
            poll_data = polls_data.get(message_id)
            if not poll_data:
                # –≠—Ç–æ —Å—Ç–∞—Ä—ã–π –æ–ø—Ä–æ—Å, –∫–Ω–æ–ø–∫–∏ —É–∂–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã
                bot.answer_callback_query(call.id, "–≠—Ç–æ—Ç –æ–ø—Ä–æ—Å —É–∂–µ –∑–∞–∫—Ä—ã—Ç.", show_alert=True)
                return

            # 2. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ
            if call.data == "poll_go":
                poll_data['going'][user_id] = user_name
                poll_data['not_going'].pop(user_id, None) # –£–±–∏—Ä–∞–µ–º, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª
                bot.answer_callback_query(call.id, "–í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å! üëç")
                
            elif call.data == "poll_pass":
                poll_data['not_going'][user_id] = user_name
                poll_data['going'].pop(user_id, None) # –£–±–∏—Ä–∞–µ–º, –µ—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª
                bot.answer_callback_query(call.id, "–í—ã '–ø–∞—Å—É–µ—Ç–µ' üëé")
                
            elif call.data == "poll_close":
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å
                if user_id != poll_data['creator_id']:
                    bot.answer_callback_query(call.id, "–ó–∞–∫—Ä—ã—Ç—å –æ–ø—Ä–æ—Å –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å!", show_alert=True)
                    return
                
                # –ó–∞–∫—Ä—ã–≤–∞–µ–º –æ–ø—Ä–æ—Å
                final_text = format_poll_text(poll_data) # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å –∏–º–µ–Ω–∞–º–∏
                final_text = f"<b>–û–ü–†–û–° –ó–ê–í–ï–†–®–ï–ù:</b>\n{final_text}" # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                             
                bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=final_text, parse_mode="HTML", reply_markup=None)
                # –£–¥–∞–ª—è–µ–º –æ–ø—Ä–æ—Å –∏–∑ –ø–∞–º—è—Ç–∏
                del polls_data[message_id]
                return

            # 3. –û–±–Ω–æ–≤–ª—è–µ–º –¢–ï–ö–°–¢ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –Ω–æ–≤—ã–º —Å–ø–∏—Å–∫–æ–º –∏–º–µ–Ω
            new_text = format_poll_text(poll_data)
            new_markup = create_poll_markup(poll_data)
            
            try:
                bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=new_text, parse_mode="HTML", reply_markup=new_markup)
            except telebot.apihelper.ApiTelegramException as e:
                if "message is not modified" in str(e):
                    pass # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2 —Ä–∞–∑–∞ –Ω–∞–∂–∞–ª –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ
                else:
                    raise e # –ü–æ–¥–Ω–∏–º–∞–µ–º –¥—Ä—É–≥—É—é –æ—à–∏–±–∫—É
            return # –í—ã—Ö–æ–¥–∏–º, —Ç.–∫. —ç—Ç–æ –±—ã–ª –æ–ø—Ä–æ—Å
            
        # --- –ö–æ–Ω–µ—Ü –±–ª–æ–∫–∞ –û–ü–†–û–°–û–í (v17) ---

        
        # --- –ü–†–û–í–ï–†–ö–ê "–í–õ–ê–î–ï–õ–¨–¶–ê" –ú–ï–ù–Æ (v18) ---
        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –æ–ø—Ä–æ—Å, –∑–Ω–∞—á–∏—Ç, —ç—Ç–æ –∏–≥—Ä–æ–≤–æ–µ –º–µ–Ω—é. –ü—Ä–æ–≤–µ—Ä–∏–º, –∫—Ç–æ –µ–≥–æ –Ω–∞–∂–∞–ª.
        
        owner_id = menu_owners.get(message_id)
        
        # –ï—Å–ª–∏ –º–µ–Ω—é –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ "–±–∞–∑–µ" (–Ω–∞–ø—Ä–∏–º–µ—Ä, –±–æ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏–ª—Å—è)
        if not owner_id:
            bot.answer_callback_query(call.id, "–≠—Ç–æ –∏–≥—Ä–æ–≤–æ–µ –º–µ–Ω—é —É—Å—Ç–∞—Ä–µ–ª–æ. –ù–∞–ø–∏—à–∏—Ç–µ /start", show_alert=True)
            return
            
        # –ï—Å–ª–∏ –Ω–∞–∂–∞–ª –ù–ï –≤–ª–∞–¥–µ–ª–µ—Ü
        if owner_id != user_id:
            bot.answer_callback_query(call.id, "–≠—Ç–æ –Ω–µ —Ç–≤–æ–µ –º–µ–Ω—é! –ù–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–µ.", show_alert=True)
            return
        
        # --- –ö–æ–Ω–µ—Ü v18 ---


        # (–ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –∫–Ω–æ–ø–∫–∞ –æ–ø—Ä–æ—Å–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∫–∞–∫ –æ–±—ã—á–Ω–æ)
        bot.answer_callback_query(call.id)
        
        # --- –ò–î–ï–Ø ‚Ññ3 + –ò–î–ï–Ø ‚Ññ5: –õ–æ–≥–∏–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ–¥ –≥—Ä—É–ø–ø—ã) ---
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∑–∞–ø–∏—Å—å –¥–ª—è —ç—Ç–æ–≥–æ –ß–ê–¢–ê
        if chat_id not in user_daily_stats:
            user_daily_stats[chat_id] = {'date': today_str, 'users': {}}
            
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —É—Å—Ç–∞—Ä–µ–ª–∞ –ª–∏ –¥–∞—Ç–∞ –¥–ª—è —ç—Ç–æ–≥–æ –ß–ê–¢–ê
        if user_daily_stats[chat_id]['date'] != today_str:
            user_daily_stats[chat_id] = {'date': today_str, 'users': {}}
            
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø % –≤ –≠–¢–û–ú –ß–ê–¢–ï
        if user_id not in user_daily_stats[chat_id]['users']:
            user_daily_stats[chat_id]['users'][user_id] = {
                'krasavchik': random.randint(0, 100),
                'loh': random.randint(0, 100),
                'name': user_name,
                'size': random.randint(1, 30), # –î–æ–±–∞–≤–ª—è–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ä–∞–∑–º–µ—Ä–∞
                'roulette_best_streak': 0,    
                'roulette_current_streak': 0  
            }

        # –¢–µ–ø–µ—Ä—å —É –Ω–∞—Å 100% –µ—Å—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        current_stats = user_daily_stats[chat_id]['users'][user_id]
        
        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —É —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –µ—Å—Ç—å –Ω–æ–≤—ã–µ –ø–æ–ª—è
        if 'roulette_best_streak' not in current_stats:
            current_stats['roulette_best_streak'] = 0
        if 'roulette_current_streak' not in current_stats:
            current_stats['roulette_current_streak'] = 0
        if 'size' not in current_stats:
             current_stats['size'] = random.randint(1, 30) # –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –∏–≥—Ä–∞–ª –¥–æ v16

        
        # –ì–æ—Ç–æ–≤–∏–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É "–ù–∞–∑–∞–¥" (–¥–ª—è "—Å–º–µ—Ä—Ç–∏" –∏–ª–∏ –≤—ã—Ö–æ–¥–∞)
        back_markup = types.InlineKeyboardMarkup(row_width=1)
        back_btn = types.InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="go_back_to_menu")
        back_markup.add(back_btn)


        # --- –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–ü–ö–ò "–ù–ê–ó–ê–î" (v14) ---
        if call.data == "go_back_to_menu":
            # –ö–æ–≥–¥–∞ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ä—É–ª–µ—Ç–∫–∏, –Ω–∞–¥–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—á–µ—Ç
            current_streak = current_stats.get('roulette_current_streak', 0)
            if current_streak > current_stats.get('roulette_best_streak', 0):
                current_stats['roulette_best_streak'] = current_streak
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É
            current_stats['roulette_current_streak'] = 0
            
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text=MAIN_MENU_TEXT,
                reply_markup=create_main_menu_markup()
            )
            return

        # --- –û–ë–†–ê–ë–û–¢–ö–ê –ö–ù–û–üKI –°–¢–ê–¢–ò–°–¢–ò–ö–ò (v11) ---
        if call.data == "show_group_stats":
            # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –û–¢–ü–†–ê–í–ò–¢ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            send_group_stats(call.message)
            return

        # --- –ò–î–ï–Ø ‚Ññ6: –ê–ù–ò–ú–ê–¶–ò–Ø –†–£–õ–ï–¢–ö–ò (v16) ---
        
        final_text = ""
        animation_prefix = ""
        is_standard_roulette_animation = False 
        is_size_animation = False # –ù–æ–≤—ã–π —Ñ–ª–∞–≥ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ "–†–∞–∑–º–µ—Ä–∞"
        # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨ (v20) ---
        is_game_played = False # –§–ª–∞–≥, —á—Ç–æ –∏–≥—Ä–∞ –±—ã–ª–∞ —Å—ã–≥—Ä–∞–Ω–∞
        # --- –ö–æ–Ω–µ—Ü v20 ---

        
        if call.data == "ask_krasavchik":
            percent = current_stats['krasavchik']
            final_text = get_krasavchik_comment(percent)
            animation_prefix = "üòé –ö—Ä–∞—Å–∞–≤—á–∏–∫"
            is_standard_roulette_animation = True 
            is_game_played = True # (v20)
            
        elif call.data == "ask_loh":
            percent = current_stats['loh']
            final_text = get_loh_comment(percent)
            animation_prefix = "üòÖ –õ–æ—Ö"
            is_standard_roulette_animation = True 
            is_game_played = True # (v20)
        
        elif call.data == "ask_size":
            size = current_stats['size']
            final_text = get_size_comment(size)
            animation_prefix = "üçÜ –ú–æ–π —Ä–∞–∑–º–µ—Ä"
            is_size_animation = True # –í–∫–ª—é—á–∞–µ–º –Ω–æ–≤—É—é –∞–Ω–∏–º–∞—Ü–∏—é
            is_game_played = True # (v20)
        
        elif call.data == "roulette_play_next":
            
            # 1. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Ä–∏—é
            current_streak = current_stats.get('roulette_current_streak', 0)
            current_chance = current_streak + 1
            max_chance = 6
            
            # (–ê–Ω–∏–º–∞—Ü–∏—è)
            try:
                bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=f"üåÄ –ö—Ä—É—á—É –±–∞—Ä–∞–±–∞–Ω... (–®–∞–Ω—Å {current_chance}/{max_chance})")
                time.sleep(0.6)
                bot.edit_message_text(chat_id=chat_id, message_id=message_id, text="üî´ –ü—Ä–∏—Å—Ç–∞–≤–ª—è—é –∫ –≤–∏—Å–∫—É...")
                time.sleep(0.6)
            except telebot.apihelper.ApiTelegramException: pass # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏

            # 2. –°—á–∏—Ç–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            shot = random.randint(1, max_chance)
            is_dead = (shot <= current_chance)
            
            if is_dead: 
                final_text = f"üí• –ë–ê–ú! ({current_chance}/{max_chance}). –¢–≤–æ—è —É–¥–∞—á–∞ –∫–æ–Ω—á–∏–ª–∞—Å—å –Ω–∞ {current_chance}-–º –≤—ã—Å—Ç—Ä–µ–ª–µ!"
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –õ–£–ß–®–£–Æ —Å–µ—Ä–∏—é (—ç—Ç–æ –±—ã–ª–∞ —Å–µ—Ä–∏—è *–¥–æ* —ç—Ç–æ–≥–æ –≤—ã—Å—Ç—Ä–µ–ª–∞)
                if current_streak > current_stats['roulette_best_streak']:
                    current_stats['roulette_best_streak'] = current_streak
                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¢–ï–ö–£–©–£–Æ —Å–µ—Ä–∏—é
                current_stats['roulette_current_streak'] = 0
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
                bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=final_text, reply_markup=back_markup)
                
                # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨ (v20) ---
                user_last_active_chat[user_id] = chat_id # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —á–∞—Ç
                # --- –ö–æ–Ω–µ—Ü v20 ---
                return # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏

            else: # –í–´–ñ–ò–õ
                # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Ä–∏—é
                current_stats['roulette_current_streak'] += 1
                new_streak = current_stats['roulette_current_streak']
                
                # –ì–æ—Ç–æ–≤–∏–º –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" / "–°—Ç–æ–ø"
                continue_markup = types.InlineKeyboardMarkup(row_width=1)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª –ª–∏ —ç—Ç–æ 5-–π (–ø–æ—Å–ª–µ–¥–Ω–∏–π —É–¥–∞—á–Ω—ã–π) –≤—ã—Å—Ç—Ä–µ–ª
                if new_streak == max_chance - 1: # –¢.–µ. —Å–µ—Ä–∏—è —Å—Ç–∞–ª–∞ 5 (5/6)
                    final_text = f"üí® –©–µ–ª–∫! ({current_chance}/{max_chance}). –ù–ï–í–ï–†–û–Ø–¢–ù–û! –¢—ã –≤—ã–∂–∏–ª... \n–ù–æ –≤ –±–∞—Ä–∞–±–∞–Ω–µ 100% –æ—Å—Ç–∞–ª—Å—è 1 –ø–∞—Ç—Ä–æ–Ω."
                    # –ö–Ω–æ–ø–∫–∞ –Ω–∞ 6-–π, 100% —Å–º–µ—Ä—Ç–µ–ª—å–Ω—ã–π –≤—ã—Å—Ç—Ä–µ–ª
                    continue_btn = types.InlineKeyboardButton(f"–°–¥–µ–ª–∞—Ç—å –≤—ã—Å—Ç—Ä–µ–ª (–®–∞–Ω—Å 6/6)", callback_data="roulette_play_next")
                else:
                    final_text = f"üí® –©–µ–ª–∫! ({current_chance}/{max_chance}). –ü—Ä–æ–Ω–µ—Å–ª–æ... –†–∏—Å–∫–Ω–µ—à—å –µ—â–µ?"
                    continue_btn = types.InlineKeyboardButton(f"–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ (–®–∞–Ω—Å {new_streak + 1}/{max_chance})", callback_data="roulette_play_next")
                
                # –ö–Ω–æ–ø–∫–∞ "–ó–∞–±—Ä–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à"
                stop_btn = types.InlineKeyboardButton(f"üö´ –•–≤–∞—Ç–∏—Ç (—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–µ—Ä–∏—é: {new_streak})", callback_data="go_back_to_menu")
                continue_markup.add(continue_btn, stop_btn)
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ 2 –∫–Ω–æ–ø–∫–∏
                bot.edit_message_text(chat_id=chat_id, message_id=message_id, text=final_text, reply_markup=continue_markup)
                
                # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨ (v20) ---
                user_last_active_chat[user_id] = chat_id # –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —á–∞—Ç
                # --- –ö–æ–Ω–µ—Ü v20 ---
                return # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
            
            
        # –ï—Å–ª–∏ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –æ–¥–Ω–∞ –∏–∑ –∫–Ω–æ–ø–æ–∫ "–ì—Ä–∞–¥—É—Å–Ω–∏–∫–∞" –∏–ª–∏ "–†–∞–∑–º–µ—Ä–∞"
        if final_text:
            
            # –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è "–ì—Ä–∞–¥—É—Å–Ω–∏–∫–æ–≤"
            if is_standard_roulette_animation:
                # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é (6 "–ø—Ä–æ–∫—Ä—É—Ç–æ–∫")
                for i in range(6): 
                    try:
                        fake_percent = random.randint(0, 100)
                        emoji = "üé∞" if i < 5 else "üé≤" 
                        
                        bot.edit_message_text(
                            chat_id=chat_id,
                            message_id=message_id,
                            text=f"{emoji} {animation_prefix}: –ö—Ä—É—á—É... {fake_percent}%"
                        )
                        time.sleep(0.4) # –ü–∞—É–∑–∞ 0.4 —Å–µ–∫—É–Ω–¥—ã
                    
                    except telebot.apihelper.ApiTelegramException as e:
                        if "message is not modified" in str(e): pass 
                        else: print(f"–û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏: {e}")
            
            # –ù–æ–≤–∞—è –∞–Ω–∏–º–∞—Ü–∏—è –¥–ª—è "–†–∞–∑–º–µ—Ä–∞"
            elif is_size_animation:
                 # –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é (6 "–ø—Ä–æ–∫—Ä—É—Ç–æ–∫")
                for i in range(6): 
                    try:
                        fake_size = random.randint(1, 30)
                        emoji = "üé∞" if i < 5 else "üìè" 
                        
                        bot.edit_message_text(
                            chat_id=chat_id,
                            message_id=message_id,
                            text=f"{emoji} {animation_prefix}: –ò–∑–º–µ—Ä—è—é... {fake_size} —Å–º"
                        )
                        time.sleep(0.4) # –ü–∞—É–∑–∞ 0.4 —Å–µ–∫—É–Ω–¥—ã
                    
                    except telebot.apihelper.ApiTelegramException as e:
                        if "message is not modified" in str(e): pass 
                        else: print(f"–û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏: {e}")
                    
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text=final_text,
                reply_markup=back_markup
            )
            
            # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨ (v20) ---
            # –ï—Å–ª–∏ –∏–≥—Ä–∞ –±—ã–ª–∞ —Å—ã–≥—Ä–∞–Ω–∞ (–ö—Ä–∞—Å–∞–≤—á–∏–∫, –õ–æ—Ö, –†–∞–∑–º–µ—Ä),
            # –∑–∞–ø–æ–º–∏–Ω–∞–µ–º —ç—Ç–æ—Ç —á–∞—Ç –∫–∞–∫ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π
            if is_game_played:
                user_last_active_chat[user_id] = chat_id
            # --- –ö–æ–Ω–µ—Ü v20 ---

    except telebot.apihelper.ApiTelegramException as e:
        if "message is not modified" in str(e):
            pass 
        else:
            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ (–≤–æ–∑–º–æ–∂–Ω–æ, —Å–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ): {e}")

# --- –ù–û–í–û–ï –î–õ–Ø RENDER (v17) ---
# –≠—Ç–æ—Ç –∫–æ–¥ –∑–∞–ø—É—Å—Ç–∏—Ç Flask-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
# —á—Ç–æ–±—ã "–æ–±–º–∞–Ω—É—Ç—å" Render –∏ –Ω–µ –¥–∞—Ç—å –µ–º—É "—É—Å–Ω—É—Ç—å"
app = Flask(__name__)

@app.route('/')
def home():
    # –û—Ç–≤–µ—Ç "–ü–∏–Ω–≥–µ—Ä—É"
    return "–Ø –∂–∏–≤, –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

def run():
    # Render —Å–∞–º –≤—ã–¥–∞—Å—Ç –ø–æ—Ä—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π $PORT
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port)

def start_server():
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    t = Thread(target=run)
    t.start()
# --- –ö–æ–Ω–µ—Ü v17 ---

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
print("Starting the web server to keep bot alive...")
start_server()
print("Starting the bot polling...")
bot.polling(none_stop=True)
